services:
  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service


  configserver:
    image: "hardik830/configserver:s6"
    container_name: configserver-ms
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

    extends:
      file: common-config.yml
      service: microservice-base-config

  accounts:
    image: "hardik830/accounts:s6"
    container_name: accounts-ms
    ports:
      - "8080:8080"

    depends_on:
      configserver:
        condition: service_healthy

      rabbit:
          condition: service_healthy
    environment:
        -SPRING_APPLICATION_NAME: accounts

    extends:
      file: common-config.yml
      service: microservice-configserver-config

  loans:
    image: "hardik830/loans:s6"
    container_name: loans-ms
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m

    environment:
      -SPRING_APPLICATION_NAME: loans
    extends:
         file: common-config.yml
         service: microservice-configserver-config

  cards:
    image: "hardik830/cards:s6"
    container_name: cards-ms
    ports:
      - "9000:9000"

    depends_on:
      configserver:
        condition: service_healthy

    environment:
      -SPRING_APPLICATION_NAME: cards
    extends:
      file: common-config.yml
      service: microservice-configserver-config


networks:
  eazybank:
    driver: "bridge"


##we can define any number of services inside this services block
##then give service name
##then give the image name for that service try cover the image name in double quotes so that
##it should be clear to docker compose
#services:
#    accounts:
#        image: "hardik830/accounts:s4"
#        container_name: accounts-ms
#        ports:
#            - "8080:8080"
##         this is used to restrict or limit the usage of memory
##    allocation of the system restrict to use only maximum 700mb   -
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
#    loans:
#        image: "hardik830/loans:s4"
#        container_name: loans-ms
#        ports:
#            - "8090:8090"
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
#    cards:
#        image: "hardik830/cards:s4"
#        container_name: cards-ms
#        ports:
#            - "9000:9000"
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
##          since you are using the same network in all three microservice
##    - you have to invoke you networks with same name that you define in all microservices
##driver: "bridge" is mention to create a bridge network with same name eazybank
#networks:
#    eazybank:
#        driver: "bridge"
#
#
