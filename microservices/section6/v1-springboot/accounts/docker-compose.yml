services:
  accounts:
    image: "hardik830/accounts:s4"
    container_name: accounts-ms
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank
  loans:
    image: "hardik830/loans:s4"
    container_name: loans-ms
    ports:
      - "8090:8090"
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank
  cards:
    image: "hardik830/cards:s4"
    container_name: cards-ms
    ports:
      - "9000:9000"
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - eazybank
networks:
  eazybank:
    driver: "bridge"


##we can define any number of services inside this services block
##then give service name
##then give the image name for that service try cover the image name in double quotes so that
##it should be clear to docker compose
#services:
#    accounts:
#        image: "hardik830/accounts:s4"
#        container_name: accounts-ms
#        ports:
#            - "8080:8080"
##         this is used to restrict or limit the usage of memory
##    allocation of the system restrict to use only maximum 700mb   -
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
#    loans:
#        image: "hardik830/loans:s4"
#        container_name: loans-ms
#        ports:
#            - "8090:8090"
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
#    cards:
#        image: "hardik830/cards:s4"
#        container_name: cards-ms
#        ports:
#            - "9000:9000"
#        deploy:
#            resources:
#                limits:
#                    memory: 700m
#        networks:
#            - eazybank
##          since you are using the same network in all three microservice
##    - you have to invoke you networks with same name that you define in all microservices
##driver: "bridge" is mention to create a bridge network with same name eazybank
#networks:
#    eazybank:
#        driver: "bridge"
#
#
